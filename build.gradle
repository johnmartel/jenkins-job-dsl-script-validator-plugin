plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'codenarc'
    id 'jacoco'
    id 'idea'
}

group = 'ca.coglinc.plugins.jenkins.jobdsl.validator'

repositories {
    jcenter()
}

sourceSets {
    acceptanceTest {
        groovy.srcDir file('src/acceptance-test/groovy')
    }
}

configurations {
    all {
        resolutionStrategy {
            failOnVersionConflict()
        }
    }
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.4.12'
    implementation gradleApi()

    testImplementation('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude module: 'groovy-all'
    }
    testImplementation 'junit:junit:4.12'
    testImplementation 'cglib:cglib-nodep:3.2.5'

    acceptanceTestImplementation sourceSets.main.output
    acceptanceTestImplementation configurations.testImplementation
    acceptanceTestImplementation sourceSets.test.output

    acceptanceTestRuntime configurations.testRuntime
}

codenarc {
    configFile = file("${projectDir}/config/codenarc/ruleset.groovy")

    reportFormat = 'html'
    reportsDir = file("${buildDir}/reports/codenarc")

    toolVersion = '1.0'
}

test {
    testLogging {
        showStandardStreams = true
    }
}

task acceptanceTest(type: Test) {
    mustRunAfter test
    group = 'Verification'
    description = 'Runs all acceptance tests (possibly long running).'

    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath

    testLogging {
        showStandardStreams = true
    }
}

check.dependsOn acceptanceTest

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

tag {
    message {
        "Release version ${version}"
    }
}

gradlePlugin {
    plugins {
        jenkinsJobDslScriptValidatorPlugin {
            id = 'ca.coglinc.jenkins.jobdsl.validator'
            implementationClass = 'ca.coglinc.plugins.jenkins.jobdsl.validator.JenkinsJobDslValidatorPlugin'
        }
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.acceptanceTest.groovy.srcDirs
        testSourceDirs += project.sourceSets.acceptanceTest.resources.srcDirs
    }
}
